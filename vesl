#!/bin/bash

# This file is part of vesl.
# (c) Jim Fisk <jim.fisk@jantcu.com>
# For the full copyright and license information, please view the MIT
# license located at https://github.com/Jantcu/vesl/blob/master/LICENSE.

# Draws "vesl" in CLI block letters.
function veslbrand() {
  echo "                _        _~     "
  echo "__   _____  ___| |   _~ )_)_~   "
  echo "\ \ / / _ \/ __| |   )_))_))_)  "
  echo " \ V /  __/\__ \ |   _!__!__!_  "
  echo "  \_/ \___||___/_|   \_______/  "
  echo "~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~ "
  echo "^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^ "
}

# Defines the available commands
function vesloptions() {
  echo "Options:"
  echo "  --help, -h        Documentation providing additional context for commands."
  echo "  --version, -v     Prints release details of the vesl that you are using."
  echo "  --all, -a         Add to the 'list' command to display all containers available to vesl."
}

# Defines the available commands
function veslcommands() {
  echo "Commands:"
  echo "  load              Downloads a vesl blueprint (docker image)."
  echo "  use               Sets the blueprint (docker image) for creating a new vesl (docker container)."
  echo "  release           Deletes a blueprint (docker image) using the 'rmi' command."
  echo "  list, ls          Displays all vesls (docker containers) created using a vesl blueprint."
  echo "  create            Creates a new vesl (docker container) from the vesl blueprint in 'use'."
  echo "  destroy           Deletes all references to an existing vesl (docker container)."
  echo "  sail, start       Starts a vesl (docker container) that has already been created."
  echo "  sink, stop        Stops a vesl (docker container) that is currently running."
}

# Start an existing docker container.
function veslstart() {
  if [[ -n "$arg" ]]; then
    container=$arg
    docker start $container
    docker exec -it $container service apache2 start
    docker exec -it $container service mysql start
    docker exec -ti $container script -q -c "fish" /dev/null    
  else
    echo "Please specify a vesl"
  fi
}

# List all existing docker containers.
function vesllist() {
  docker ps -a --format '{{.Names}}  {{.Ports}}'
}

# Get the user input
command=$1
arg=$2
# Check to see if user actually gave input
if [[ -n "$command" ]]; then
  if [[ $command == "sail" ]]; then
    veslstart
  elif [[ $command == "list" ]] || [[ $command == "ls" ]]; then
    vesllist
  elif [[ $command == "--help" ]]; then
    vesloptions
    veslcommands
  else
    echo \"$command\" is not a valid command. Please use \"clideshow help\" to see what is available.
  fi
# The user did not give any input.
else
  # Add line break.
  echo $'\r'
  veslbrand
  # Send welcome message.
  echo "Welcome to vesl"
fi
